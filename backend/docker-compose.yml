version: '3.8'

services:
  # Base de dados PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: universidade-lusiada-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: universidade_lusiada
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - universidade-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: universidade-lusiada-backend
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres123@database:5432/universidade_lusiada?schema=public
      JWT_SECRET: sua_chave_secreta_super_segura_aqui
      JWT_REFRESH_SECRET: sua_chave_refresh_secreta_aqui
      JWT_EXPIRES_IN: 7d
      JWT_REFRESH_EXPIRES_IN: 30d
    ports:
      - "3001:3001"
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    networks:
      - universidade-network
    healthcheck:
      test: ["CMD", "node", "dist/health-check.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (para sess√µes e cache)
  redis:
    image: redis:7-alpine
    container_name: universidade-lusiada-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - universidade-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Nginx (reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: universidade-lusiada-nginx
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - universidade-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  universidade-network:
    driver: bridge 